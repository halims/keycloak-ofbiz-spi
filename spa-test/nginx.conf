events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    server {
        listen 443 ssl;
        server_name spa.local;

        ssl_certificate /etc/nginx/ssl/spa.crt;
        ssl_certificate_key /etc/nginx/ssl/spa.key;

        # Serve React production build (no WebSocket issues)
        root /usr/share/nginx/html;
        index index.html;

        # Handle React Router (SPA routing)
        location / {
            try_files $uri $uri/ /index.html;
            
            # Comprehensive CORS headers for Keycloak authentication
            add_header Access-Control-Allow-Origin "https://keycloak.local:8444" always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Accept, Accept-Language, Content-Language, Content-Type, Authorization" always;
            add_header Access-Control-Max-Age "1728000" always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "https://keycloak.local:8444" always;
                add_header Access-Control-Allow-Credentials true always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Accept, Accept-Language, Content-Language, Content-Type, Authorization" always;
                add_header Access-Control-Max-Age "1728000" always;
                add_header Content-Type "text/plain charset=UTF-8";
                add_header Content-Length 0;
                return 204;
            }
        }

        # Static assets with caching and CORS
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept" always;
        }

        # Handle JSON files with CORS
        location ~* \.(json)$ {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept" always;
        }
    }
}
